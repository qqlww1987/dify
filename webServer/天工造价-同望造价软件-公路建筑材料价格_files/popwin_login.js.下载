// add by zhuwp 2015-06-30 cookie定义
if (typeof(g_domain) == "undefined")
	g_domain = document.location.host.substring(document.location.host.indexOf("."));


$(function(){
	
	var replaceWeChatLoginUrl=function(){
		var url="https://open.weixin.qq.com/connect/qrconnect?appid=wx50aeb74269b05706&response_type=code&scope=snsapi_login&state=WX_TGCOST&redirect_uri=";
		var currentLink=location.href;
		var redirectUrl="http://www.tgcost.com/base/openLogin/access_token.html?target_url="+currentLink;
		var encodeRedirectUrl=encodeURIComponent(redirectUrl);
		url+=encodeRedirectUrl+"#wechat_redirect";
		console.log(url);
		$("a.wx-login").attr("href",url);		
	}();
	
	var replaceQQLoginUrl=function(){
		$("a.qq-login").attr("href",$("a.qq-login").attr("href")+"?target_url="+location.href)
	}();
	
	
});


/**
 * 若登录了，进行哪些操作
 * @param operationFuncs 数组，数组元素为函数
 */
function loginInOperation(operationFuncs){	
	$.ajax({
	  	type: "post",
	      url: "/base/user/isLogin.json",
	      timeout: 5000, //超时时间：5秒
	      async: true,
	      error: function(){
	    	  console.log("can not connect to /base/user/isLogin.json? ");
	      },
	      success: function(json){
	    	  if(json.success){
	    		  $.each(operationFuncs,function(index,item){
	    			 item(); 
	    		  });
	    	  }
	      }
	});
}

function isLogin(){
	var result = false;
	$.ajax({
	  	type: "post",
	      url: "/base/user/isLogin.json",
	      timeout: 5000, //超时时间：5秒
	      async: false,
	      error: function(){
	      },
	      success: function(json){
	    	  result = json.success;
	    	  return result;
	      }
	});
	return result;
}
function doLogin(){
    //用ajax实现登录，页面不跳转，成功后，继续执行之前的操作；
    var username = $("#username").val();
    var password = $("#password").val();
    if(username==null || username==''){
    	layer.msg('用户名不能为空!');
    	return false;
    }
    if(password==null || password==''){
    	layer.msg('密码不能为空!');
    	return false;
    }
    //写一个验证用户名、密码的方法
	$.ajax({
	  	type: "post",
	      url: "/base/user/checkUserInfo.json?username="+username+"&password="+encodeURIComponent(password)+"&_remember_me="+$("#remember_me").val(),
	      async: false,
	      success: function(json){
	    	  if(json.success){
	    		  realLogin(username, password);
	    	  }else{
	    		  layer.msg("用户名、密码不匹配!");	    		  
	    	  }
	      },
	      error: function(){
	    	  layer.msg("服务器网络忙，请稍后再试!");
	    	  return;
	      }
	});
}
function realLogin(username, password){
	var url = "/base/login.sec?username="+username+"&password="+encodeURIComponent(password);
	$.ajax({
	  	type: "post",
	      url: url,
	      async: false,
	      success: function(json){
		 // 保存用户Cookie信息
		 if ($("#remember_me:checked").size() > 0) {
			setCookie("rmbUserFlag", "true", 15, g_domain); // 存储一个带14天期限的 cookie
			setCookie("rmbUsername", username, 15, g_domain); // 存储一个带14天期限的 cookie
			setCookie("rmbPassword", new Base64().encode(password), 15, g_domain); // 存储一个带14天期限的 cookie
		 } else { // 清空cookie
			delCookie("rmbUserFlag", g_domain);
			delCookie("rmbUsername", g_domain);
			delCookie("rmbPassword", g_domain);
		 }
		 // set cookie for sync login
		 setCookie("syncLoginFlag", hex_md5(password), 1, g_domain);
		 setCookie("casLogin", "true", 1, "");

	    	 //继续执行后续操作
	    	 doNext();
	      },
	      error: function(){
	    	  //alertMessage("请求失败！");
	    	  doNext();
	      }
	});
}
function doNext(){
	if(!isLogin()){
		layer.msg("登陆失败，请重新操作！<br/>可能原因：账号未注册；账号密码不匹配；");
		return;
	}
	showUserInfo();
	//$("#closePopwin").click();
	$(".popwin-login").hide();
	var middleLoginUrl = $("#middleLoginUrl").val();
	if(middleLoginUrl!=null && middleLoginUrl!='' && $.trim(middleLoginUrl)!=''){
		var openUrlTarget = $("#openUrlTarget").val();
		clearMethodUrlInfo();
		if(openUrlTarget=='_self'){
			window.location.href = middleLoginUrl;
			return;
		}else{
			var newWin = window.open(middleLoginUrl,"newWin","");
			newWin.focus();
			return;
		}
	}
	
	var nextMethodName = $("#nextMethodName").val();
	var parameters = $("#parameters").val();
	clearMethodUrlInfo();
	if(parameters!=null && parameters!='' && $.trim(parameters)!=''){
		var params = parameters.split(",");
		var execute = nextMethodName+"(";
		for(var i=0;i<params.length;i++){
			if(i>0){
				execute+=",";
			}
			execute+="'"+params[i]+"'";
		}
		execute+=(")");
		eval(execute);
	}else{
		eval(nextMethodName+"()");
	}
}

function clearMethodUrlInfo(){
	$("#middleLoginUrl").val("");
	$("#openUrlTarget").val("");
	$("#nextMethodName").val("");
	$("#parameters").val(""); 
}

function loginProcess(url,openUrlTarget,methodName,parameters){
	$("#middleLoginUrl").val(url);
	$("#openUrlTarget").val(openUrlTarget);
	$("#nextMethodName").val(methodName);
	$("#parameters").val(parameters); //多个用逗号隔开
	//$("#loginSubPage").click();
	document.getElementById("loginSubPage").click();
	
	// 初始化弹窗时验证是否记住了密码 
	if (getCookie("rmbUserFlag")) {
		$("#remember_me").attr("checked", "checked");
		$("#username").val(getCookie("rmbUsername"));
		$("#password").val(new Base64().decode(getCookie("rmbPassword")));
	}
}

function isHavePermission(permission){
	var result = false;
	$.ajax({
	      type: "post",
	      url: "/base/user/isHavePermission.json?permission="+permission,
	      async: false,
	      error: function(){
	      },
	      success: function(json){
	    	  result = json.success;
	    	  return result;
	      }
	});
	return result;
}

function windowReload(){
		window.location.reload(true);
	}
function gotoMemberAlert(){
	window.open("/base/order/buyMember.html");
}

function vipTip() {
	alertMessage(" 亲，只有会员才可操作。<a href='/base/order/buyMember.html'>咨询购买</a>");
}

function workingTip() {
	alertMessage("敬请期待！");
}

function gotoVipUpdate(){
	window.open("/base/order/buyMember.html");
}

function syncLogin() {
	var syncLoginFlag = getCookie("syncLoginFlag");
	if (syncLoginFlag == null) {
		return;
	}
	delCookie("syncLoginFlag", g_domain); // 删除同步登录Cookie标识
	$.ajax({
		timeout	: 5000,
		async	: true, // 异步
		cache	: false,
		type	: 'POST',
		url		: "/home/getSyncLoginUrl.json",
		dataType: 'json',
		data	: {
			syncLoginFlag : syncLoginFlag
		},
		success : function(url) {
			if (url != null && url.length > 0) {
				syncLoginIframe.window.location.href = url;
			}
		},
		error : function(e) {
		}
	});	
}